C51 COMPILER V9.60.0.0   MAIN                                                              05/19/2025 18:51:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\keil5\keilMDK_Install\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg52.h"      
   2          #include "temp.h"
   3          
   4          typedef unsigned int u16;       
   5          typedef unsigned char u8;
   6          
   7          sbit LSA = P2^2;
   8          sbit LSB = P2^3;
   9          sbit LSC = P2^4;
  10          
  11          sbit KEY_PAUSE = P3^0;
  12          sbit KEY_RESUME = P3^1;
  13          sbit KEY_CLEAR = P3^2;
  14          
  15          u8 code smgduan[17] = {
  16              0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  17              0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71
  18          };
  19          
  20          u8 ssec, sec, min;
  21          u8 DisplayData[8]; // 单一定义
  22          
  23          void delay(u16 i) { while(i--); }
  24          
  25          void Timer0Init() {
  26   1          TMOD |= 0x01;
  27   1          TH0 = 0xD8;
  28   1          TL0 = 0xF0;
  29   1          ET0 = 1;
  30   1          EA = 1;
  31   1          TR0 = 1;
  32   1      }
  33          
  34          void DigDisplay() {
  35   1              u8 i;
  36   1          for( i=0; i<8; i++) {
  37   2              switch(i) {
  38   3                  case 0: LSA=0; LSB=0; LSC=0; break;
  39   3                  case 1: LSA=1; LSB=0; LSC=0; break;
  40   3                  case 2: LSA=0; LSB=1; LSC=0; break;
  41   3                  case 3: LSA=1; LSB=1; LSC=0; break;
  42   3                  case 4: LSA=0; LSB=0; LSC=1; break;
  43   3                  case 5: LSA=1; LSB=0; LSC=1; break;
  44   3                  case 6: LSA=0; LSB=1; LSC=1; break;
  45   3                  case 7: LSA=1; LSB=1; LSC=1; break;
  46   3              }
  47   2              P0 = DisplayData[i];
  48   2              delay(50); // 缩短延时
  49   2              P0 = 0x00;
  50   2          }
  51   1      }
  52          
  53          void datapros(int temp) {
  54   1          float current_temp = temp * 0.0625; // 转换温度
  55   1          
C51 COMPILER V9.60.0.0   MAIN                                                              05/19/2025 18:51:58 PAGE 2   

  56   1          if(current_temp < 30) {
  57   2              DisplayData[0] = smgduan[min/10];
  58   2              DisplayData[1] = smgduan[min%10];
  59   2              DisplayData[2] = 0x40;
  60   2              DisplayData[3] = smgduan[sec/10];
  61   2              DisplayData[4] = smgduan[sec%10];
  62   2              DisplayData[5] = 0x40;
  63   2              DisplayData[6] = smgduan[ssec/10];
  64   2              DisplayData[7] = smgduan[ssec%10];
  65   2          } else {
  66   2                      u16 display_val = current_temp * 100 + 0.5; // 保留两位小数
  67   2              DisplayData[0] = 0x39;                      // 显示"C"
  68   2              DisplayData[1] = smgduan[display_val/1000 % 10];
  69   2              DisplayData[2] = smgduan[display_val/100 % 10];
  70   2              DisplayData[3] = smgduan[display_val/10 % 10] | 0x80;
  71   2              DisplayData[4] = smgduan[display_val % 10];
  72   2              DisplayData[5] = 0x00; // 关闭未用显示位
  73   2              DisplayData[6] = 0x00;
  74   2              DisplayData[7] = 0x00;
  75   2       
  76   2          }
  77   1      }
  78          
  79          void KeyScan() {
  80   1          static bit key_flag = 0;  // 按键标志位
  81   1          
  82   1          if((!KEY_PAUSE || !KEY_RESUME || !KEY_CLEAR) && !key_flag) {
  83   2              delay(1000);  // 简单延时消抖
  84   2              key_flag = 1;
  85   2              
  86   2              if(!KEY_PAUSE) {      // 暂停按键
  87   3                  TR0 = 0;         // 停止定时器
  88   3              }
  89   2              else if(!KEY_RESUME) { // 继续按键
  90   3                  TR0 = 1;         // 启动定时器
  91   3              }
  92   2              else if(!KEY_CLEAR) {  // 清零按键
  93   3                  TR0 = 0;         // 停止定时器
  94   3                  min = 0;         // 时间清零
  95   3                  sec = 0;
  96   3                  ssec = 0;
  97   3              }
  98   2          }
  99   1          else if(KEY_PAUSE && KEY_RESUME && KEY_CLEAR) {
 100   2              key_flag = 0;
 101   2          }
 102   1      }
 103          
 104          void main() {
 105   1          Timer0Init();
 106   1          while(1) {
 107   2              datapros(Ds18b20ReadTemp());
 108   2              DigDisplay();
 109   2              KeyScan();
 110   2          }
 111   1      }
 112          
 113          void Timer0() interrupt 1 {
 114   1          TH0 = 0xD8;
 115   1          TL0 = 0xF0;
 116   1          
 117   1          if(TR0 && ++ssec >= 100) {
C51 COMPILER V9.60.0.0   MAIN                                                              05/19/2025 18:51:58 PAGE 3   

 118   2              ssec = 0;
 119   2              if(++sec >= 60) {
 120   3                  sec = 0;
 121   3                  if(++min >= 60) min = 0;
 122   3              }
 123   2          }
 124   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    562    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
